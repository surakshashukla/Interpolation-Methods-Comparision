shiny::runApp()
shiny::runApp()
shiny::runApp()
?mice
shiny::runApp()
install.packages("rJava")
library(rJava)
library(reshape2)
install.packages("reshape2")
library(reshape2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("mice")
install.packages("mice")
shiny::runApp()
shiny::runApp()
shiny::runApp('~/RFiles/binning')
install.packages("leaflet")
install.packages("DT")
shiny::runApp('~/RFiles/binning')
bin_data <- EqualFreq2(as.numeric(as.Date(temp_bird$Date,origin = "2010-05-05")),10)
read.csv("match_death.csv")
setwd("~/RFiles")
read.csv("match_death.csv")
d <read.csv("match_death.csv")
d <-read.csv("match_death.csv")
bin_data <- EqualFreq2(as.numeric(as.Date(d$year,origin = "2010-05-05")),10)
EqualFreq2 <- function(x,n){
nx <- length(x)
nrepl <- floor(nx/n)
nplus <- sample(1:n,nx - nrepl*n)
nrep <- rep(nrepl,n)
nrep[nplus] <- nrepl+1
x[order(x)] <- rep(seq.int(n),nrep)
x
}
x <- rpois(50,5)
y <- EqualFreq2(x,15)
table(y)
split(x,y)
x
y
?rpois()
shiny::runApp('InterpolationUI')
shiny::runApp('InterpolationUI')
